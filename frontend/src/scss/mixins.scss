@import "breakpoints.scss";
@import "variables.scss";
@import "keyframes.scss";

@mixin generalLayoutStyles() {
    height: 100%;
    margin: auto;

    @include mediaQuery(mobile) {
        width: 85%;
    }

    @include mediaQuery(tabletSmall) {
        width: 75%;
    }

    @include mediaQuery(tabletBig) {
        width: 65%;
    }

    width: 45.5%;

    @include mediaQuery(big-desktop) {
        width: 40%;
    }
}

@mixin animate($keyframesName, $duration: 300ms, $delay: 0ms, $fillmode: forwards, $animFn: $cubicBezier_0) {
    animation-delay: $delay;
    animation-duration: $duration;
    animation-name: $keyframesName;
    animation-fill-mode: $fillmode;
    animation-timing-function: $animFn;
}

@mixin unselectable() {
    -webkit-user-select: none; /* Chrome all / Safari all */
    -moz-user-select: none; /* Firefox all */
    -ms-user-select: none; /* IE 10+ */
    user-select: none; /* Likely future */
    -webkit-tap-highlight-color: transparent;
}

@mixin thinScrollBar($isVertical: true, $isVisibleOnHover: false) {
    // for desktop show the scrollbar but make it thin!
    &::-webkit-scrollbar {
        // for mobile do not show the scroll bar, user can scroll without it
        @include breakpoint(tabletBig) {
            display: none;
        }

        @if ($isVertical) {
            width: 4px;
            height: 0;
        } @else {
            width: 0;
            height: 4px;
        }
    }

    &::-webkit-scrollbar-thumb {
        background-color: $grey;
    }

    @if ($isVisibleOnHover) {
        &:not(:hover) {
            &::-webkit-scrollbar-thumb {
                background-color: transparent;
            }
        }
    }
}

@mixin closeBtnHoverable {
    &:hover {
        svg {
            transform: scale(0.8);
        }
    }
}

@mixin animateChildren($keyframes, $animationSpeed: 600ms, $delayMultiplier: 100ms) {
    @for $i from 0 through 20 {
        > *:nth-child(#{$i}) {
            opacity: 0;
            @include animate($keyframes, $animationSpeed, $i * $delayMultiplier, forwards);
        }
    }
}

@mixin genericFormFormat($formId, $withoutGridForm: false) {
    form[form-id="#{$formId}"] {
        > [data-id="#{$formId}-fieldContainer"] {
            gap: 4rem;

            @if $withoutGridForm == false {
                @media (max-height: 650px) {
                    gap: 1.5rem;
                }

                @include breakpoint(mobile, landscape) {
                    row-gap: $baseUnit;
                    column-gap: $marginUnit;
                    display: grid;
                    grid-template-columns: 1fr 1fr;
                }

                @include breakpoint(tabletSmall, landscape) {
                    gap: 2rem;
                    display: grid;
                    grid-template-columns: 1fr 1fr;
                }
            } @else {
                @include breakpoint(mobile, landscape) {
                    gap: 1.5rem;
                }
            }
        }
    }

    a {
        font-size: 1.4rem;
    }
}

@mixin genericPaperWrapper {
    background-color: $paperBg;
    border-color: $paperBorder;
    padding: $marginUnit;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: $marginUnit;
    width: 100%;
    height: 100%;
    overflow: hidden;
    min-height: 54rem;

    @media (max-height: 580px) {
        min-height: 40rem;
    }

    @media (max-height: 420px) {
        min-height: 30rem;
    }

    @media (max-height: 320px) {
        min-height: 20rem;
    }

    @include breakpoint(mobile, landscape) {
        gap: $baseUnit;
    }

    @include breakpoint(tabletSmall, portrait) {
        height: auto;
    }
}

@mixin genericPaperFormWrapper($formId, $withoutGridForm: false) {
    @include genericPaperWrapper();

    @include genericFormFormat($formId, $withoutGridForm);

    form[form-id="#{$formId}"] {
        @media (max-width: 500px) {
            margin-top: 2rem;

            &::before {
                top: -4rem;
            }
        }

        @media (max-height: 500px) {
            margin-top: 4rem;

            &::before {
                top: -4rem;
            }
        }

        @media (max-height: 400px) {
            margin-top: 2rem;

            &::before {
                top: -3rem;
            }
        }
    }

    @include animate(popIn, 800ms);

    animation-timing-function: $cubicBezier_0;
}

@mixin genericPaperFormWrapperOutlet() {
    padding: 4rem;
    display: flex;
    flex-direction: column;
    align-items: center;

    > p {
        width: 100%;
        margin-top: 2rem;
        font-size: 2.5rem;
        line-height: 4rem;

        b {
            font-size: 2.8rem;
            display: inline-block;
            word-break: break-word;
        }
    }

    p {
        color: $text;
        b {
            color: $green;
        }
    }

    button {
        margin-top: 4rem;
    }

    @media (max-width: 400px) {
        > p {
            margin-top: 2rem;
        }

        > p,
        > p b {
            font-size: 2.4rem;
            line-height: 3.4rem;
        }
    }

    @include breakpoint(mobile, landscape) {
        padding: 2rem 5rem;

        > p {
            margin-top: 2rem;
        }

        > p,
        > p b {
            font-size: 2rem;
            line-height: 3.2rem;
        }

        a {
            &:hover {
                background-color: $paperBg;
            }
        }
    }

    @include breakpoint(tabletSmall) {
        padding: 3.5rem 6.5rem;

        p {
            margin-top: 1rem;
        }
    }

    @include breakpoint(tabletBig) {
        padding: 3.5rem 6.5rem;

        p {
            margin-top: 2rem;
        }
    }
}

@mixin madeByMixin {
    &::after {
        content: "Made with ‚ù§ by Kaloyan Bozhkov";
        position: absolute;
        color: $text;
    }
}

@mixin mediaQueriesLogo {
    @include breakpoint(mobile, landscape) {
        max-width: 30vw;
    }
    @include breakpoint(tabletSmall) {
        max-width: 35vw;
    }
    @include breakpoint(tabletSmall, landscape) {
        max-width: 26vw;
    }
    @include breakpoint(tabletBig) {
        max-width: 50vw;
    }

    @media (max-height: 580px) and (orientation: portrait) {
        max-width: 15vw;
    }
}
