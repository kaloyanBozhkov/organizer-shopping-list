scalar DateTime

enum Currency {
    BGN
    USD
    GBP
}

enum SortDirection {
    ASCENDING
    DESCENDING
}

enum SortListItemsBy {
    PRICE
    CREATED
    SHOP_NAME
    PRODUCT_NAME
    IMPORTANCE
    IS_PURCHASED
}

type Position {
    lat: Float!
    long: Float!
}

type Shop {
    id: ID!
    shopName: String!
    location: Position!
    created: DateTime!
    isOpen: Boolean!
    """
     The products in the shop that we might want to buy
    """
    hasProducts: [Product!]!
}

"""
 A shopping item like a cake, pizza or salt
"""
interface Product {
    id: ID!
    name: String!
    price: Float
    currency: Currency!
    """
     The shops from which to buy the product
    """
    inShops: [Shop!]!
}

"""
 A product in the shopping list
"""
type ListItem implements Product {
    id: ID!
    name: String!
    price: Float
    currency: Currency!
    """
     The shops from which to buy the product
    """
    inShops: [Shop!]!
    listItemId: ID!
    importance: Int!
    isPurchased: Boolean!
}

type Query {
    allListItems(sortBy: SortListItemsBy = CREATED, sortDirection: SortDirection = ASCENDING): [ListItem!]!
}
